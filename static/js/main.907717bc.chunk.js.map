{"version":3,"sources":["components/contacts/contacts.module.css","components/section/section.module.css","components/filter/filter.module.css","components/section/section.js","services/contactsAPI.js","components/form/form.js","redux/contacts/contacts-selections.js","components/contacts/contacts.js","redux/contacts/contacts-actions.js","components/filter/filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/form/form.module.css"],"names":["module","exports","Section","title","children","className","s","section","head","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContact","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","body","useFetchContactQuery","useDeleteContactMutation","useAddContactMutation","Form","contacts","data","form","onSubmit","e","preventDefault","currentTarget","name","number","find","el","toLowerCase","value","alert","labelForm","inputForm","type","pattern","required","buttonForm","filter","state","Contacts","useSelector","contactsSelections","trimFilter","trim","map","id","contactItem","delete","onClick","normalizedFilter","contact","includes","getVisibleContacts","propTypec","PropTypes","array","onDeleteContact","func","contactsAction","doFilter","createAction","Filter","dispatch","useDispatch","headFilter","inputFilter","onChange","target","App","createReducer","actions","_","payload","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.907717bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__2NRlK\",\"delete\":\"contacts_delete__3X4dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"section_head__3m0XE\",\"section\":\"section_section__3z82F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headFilter\":\"filter_headFilter__31rLL\",\"inputFilter\":\"filter_inputFilter__1t20-\"};","import PropTypes from 'prop-types';\nimport s from './section.module.css';\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.head}>{title}</h2>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61797535aa7f340017404ace.mockapi.io/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContact: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: body => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n} = contactApi;\r\n","import s from './form.module.css';\nimport {\n  useAddContactMutation,\n  useFetchContactQuery,\n} from '../../services/contactsAPI';\n\nexport default function Form() {\n  const { data: contacts } = useFetchContactQuery();\n  const [addContact] = useAddContactMutation();\n  const onSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.currentTarget;\n    const newContact = contacts.find(\n      el => el.name.toLowerCase() === name.value.toLowerCase(),\n    );\n\n    newContact\n      ? alert(`${name.value} is already in your contacts!`)\n      : addContact({ name: name.value, number: number.value });\n\n    name.value = '';\n    number.value = '';\n  };\n\n  return (\n    <form className={s.form} onSubmit={e => onSubmit(e)}>\n      <label className={s.labelForm}>\n        Name\n        <input\n          className={s.inputForm}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.labelForm}>\n        Number\n        <input\n          className={s.inputForm}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.buttonForm} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const filter = state => state.filter;\r\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport s from './contacts.module.css';\nimport { contactsSelections } from '../../redux/contacts';\nimport {\n  useFetchContactQuery,\n  useDeleteContactMutation,\n} from '../../services/contactsAPI';\n\nexport default function Contacts() {\n  const { data: contacts } = useFetchContactQuery();\n\n  const [deleteContact] = useDeleteContactMutation();\n  const filter = useSelector(contactsSelections.filter);\n  const trimFilter = filter.trim() === '';\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <ul>\n      {trimFilter\n        ? contacts &&\n          contacts.map(({ id, name, number }) => {\n            return (\n              <li key={id} id={id} className={s.contactItem}>\n                {name}: {number}\n                <button\n                  className={s.delete}\n                  type=\"button\"\n                  onClick={() => deleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })\n        : getVisibleContacts().map(({ id, name, number }) => {\n            return (\n              <li key={id} id={id} className={s.contactItem}>\n                {name}: {number}\n                <button\n                  className={s.delete}\n                  type=\"button\"\n                  onClick={() => deleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n    </ul>\n  );\n}\nContacts.propTypec = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst doFilter = createAction('contacts/filter');\nconst contactsAction = {\n  doFilter,\n};\nexport default contactsAction;\n","import { useDispatch } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\nexport default function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <label>\n      <h3 className={s.headFilter}>Find contacts by name</h3>\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        onChange={e => dispatch(contactsAction.doFilter(e.target.value))}\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import Section from './components/section/section';\nimport Form from './components/form/form';\nimport Contacts from './components/contacts/contacts';\nimport Filter from './components/filter/filter';\n\nexport default function App() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst filter = createReducer('', {\n  [actions.doFilter]: (_, { payload }) => payload,\n});\nexport default filter;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactApi } from '../services/contactsAPI';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport filter from './contacts/contacts-reducer';\nimport { combineReducers } from 'redux';\n\nconst contacts = combineReducers({\n  [contactApi.reducerPath]: contactApi.reducer,\n  filter,\n});\n\nexport const store = configureStore({\n  reducer: contacts,\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3V6OX\",\"labelForm\":\"form_labelForm__17OeU\",\"inputForm\":\"form_inputForm__h2yyb\",\"buttonForm\":\"form_buttonForm__1IfMQ\"};"],"sourceRoot":""}